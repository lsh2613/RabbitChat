upstream app_servers {
    server host.docker.internal:8080; # 로컬에서 직접 실행 중인 WAS 경로에 접근
}

map $http_origin $allowed_origin {
    default "";
    "http://localhost:3000" $http_origin;
    "http://localhost:63342" $http_origin;
}

# HTTP → HTTPS 리다이렉트
server {
    listen 80;
    server_name rabbit.com; # 실제 공인 도메인이 아니기 때문에 로컬 /etc/hosts 파일의 "127.0.0.1    rabbit.com"을 추가하여 NXDOMAIN 오류를 방지
    return 301 https://$host$request_uri;
}

# HTTPS 설정
server {
    listen 443 ssl;
    server_name rabbit.com; # 실제 공인 도메인이 아니기 때문에 로컬 /etc/hosts 파일의 "127.0.0.1    rabbit.com"을 추가하여 NXDOMAIN 오류를 방지

    ssl_certificate     /etc/nginx/ssl/rabbit.cert.pem;
    ssl_certificate_key /etc/nginx/ssl/rabbit.key.pem;

    ssl_protocols       TLSv1.2 TLSv1.3;
    ssl_ciphers         HIGH:!aNULL:!MD5;

    location / {
        if ($request_method = 'OPTIONS') {
             add_header 'Access-Control-Allow-Origin' $allowed_origin always;
             add_header 'Access-Control-Allow-Methods' 'GET, POST, DELETE, PATCH, OPTIONS' always;
             add_header 'Access-Control-Allow-Headers' 'Content-Type, Authorization' always;
             add_header 'Access-Control-Allow-Credentials' 'true' always;
             return 204;
        }

        proxy_pass http://app_servers;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}
