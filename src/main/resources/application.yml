spring:
  config:
    import: optional:file:.env[.properties]
  sql:
    init:
      mode: always
  datasource:
    master:
      driver-class-name: com.mysql.cj.jdbc.Driver
      jdbc-url: jdbc:mysql://localhost:3306/rabbit?serverTimezone=Asia/Seoul&characterEncoding=UTF-8
      username: root
      password: 1234
    replica:
      driver-class-name: com.mysql.cj.jdbc.Driver
      jdbc-url: jdbc:mysql://localhost:3307/rabbit?serverTimezone=Asia/Seoul&characterEncoding=UTF-8
      username: root
      password: 1234
  jpa:
    hibernate:
      ddl-auto: update
    defer-datasource-initialization: true
    database-platform: org.hibernate.dialect.MySQLDialect
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQLDialect

  data:
    mongodb:
      uri: mongodb://root:1234@localhost:27017/rabbitmq?authSource=admin&authMechanism=SCRAM-SHA-1
      username: root
      password: 1234
    redis:
      host: localhost
      port: 6379

oauth2:
  client:
    provider:
      kakao:
        client-id: ${KAKAO_CLIENT_ID:57e328d97dc0c7b53898e2e79082f23c}
        client-secret: ${KAKAO_CLIENT_SECRET:exampleSecretKeyForRabbit}
        jwks-uri: ${KAKAO_JWKS_URI:https://kauth.kakao.com/.well-known/jwks.json}
        token-uri: ${KAKAO_TOKEN_URI:https://kauth.kakao.com/oauth/token}
        issuer: ${KAKAO_ISS:https://kauth.kakao.com}
        nonce: ${KAKAO_NONCE:example-nonce}
        redirect-uri: ${KAKAO_REDIRECT_URI:http://localhost:8080}
      google:
        client-id: ${GOOGLE_CLIENT_ID:248388975343-0oo0f79rrsqpf1k63ahpivkhd2rfu1jp.apps.googleusercontent.com}
        client-secret: ${GOOGLE_CLIENT_SECRET:exampleSecretKeyForRabbit}
        jwks-uri: ${GOOGLE_JWKS_URI:https://www.googleapis.com/oauth2/v3/certs}
        token-uri: ${GOOGLE_TOKEN_URI:https://oauth2.googleapis.com/token}
        issuer: ${GOOGLE_ISS:https://accounts.google.com}
        nonce: ${GOOGLE_NONCE:example-nonce}
        redirect-uri: ${GOOGLE_REDIRECT_URI:http://localhost:8080}

jwt:
  secret-key:
    access-token: ${JWT_ACCESS_SECRET_KEY:exampleSecretKeyForPennywaySystemAccessSecretKeyTestForPadding}
    refresh-token: ${JWT_REFRESH_SECRET_KEY:exampleSecretKeyForPennywaySystemRefreshSecretKeyTestForPadding}
  expiration-time:
    access-token: ${JWT_ACCESS_EXPIRATION_TIME:1800000} # 30m (30 * 60 * 1000) 1800000
    refresh-token: ${JWT_REFRESH_EXPIRATION_TIME:604800000} # 7d (7 * 24 * 60 * 60 * 1000)

rabbitmq:
  host: "localhost"
  port: 5672
  virtual-host: "/"
  username: "guest"
  password: "guest"
  relay:
    port: 61613
    system-login: guest
    system-passcode: guest
    client-login: guest
    client-passcode: guest
  chat:
    queue:
      name: "chat.queue"
    exchange:
      name: "chat.exchange"
    routing:
      key: "*.room."

logging:
  level:
    ROOT: INFO
    org.hibernate: DEBUG
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE
    org.hibernate.sql: debug
    org.hibernate.type: trace
    com.zaxxer.hikari.HikariConfig: DEBUG
    org.springframework.orm: TRACE
    org.springframework.transaction: TRACE
    com.zaxxer.hikari: TRACE
    com.mysql.cj.jdbc: TRACE
